<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on ALIBABA WIKI - 菩薩球球</title>
    <link>http://myghost.aligogo.pw/tags/docker/index.xml</link>
    <description>Recent content in Docker on ALIBABA WIKI - 菩薩球球</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="http://myghost.aligogo.pw/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Alpine Linux Docker container with sshd</title>
      <link>http://myghost.aligogo.pw/post/alpine-ssh/</link>
      <pubDate>Sun, 15 Jan 2017 08:21:31 +0000</pubDate>
      
      <guid>http://myghost.aligogo.pw/post/alpine-ssh/</guid>
      <description>

&lt;h2 id=&#34;簡介&#34;&gt;簡介&lt;/h2&gt;

&lt;p&gt;Alpine Linux 是很輕量級且安全度很高的發行版本。基本系統（包含可執行核心）在5MB以下,非常適合運作在 嵌入式系統及單板電腦上。幾乎可以與BusyBox Linux 這個發行版本相比拼,但與BusyBox 不同的是它支援需多popular套件可以安裝。因此此篇章試著用Alpine image 運作在 Docker上。&lt;/p&gt;

&lt;h2 id=&#34;建立dockerfile&#34;&gt;建立Dockerfile&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;先建立 目錄 名為 Alpine, 此目錄下建 Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;mkdir /tmp/Alpine &amp;amp;&amp;amp; touch /tmp/Dockerfile
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;編寫 Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;FROM alpine:latest
RUN  apk update
RUN  apk add openssh
RUN  /usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key
RUN  /usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key
RUN  /usr/bin/ssh-keygen -t ecdsa -f  /etc/ssh/ssh_host_ecdsa_key                                                                     
RUN  /usr/bin/ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
RUN  echo &#39;root:qwedcxza&#39;|chpasswd
RUN  echo &#39;PermitRootLogin yes&#39; &amp;gt;&amp;gt; /etc/ssh/sshd_config
CMD [&amp;quot;/usr/sbin/sshd&amp;quot;, &amp;quot;-D&amp;quot;, &amp;quot;-f&amp;quot;, &amp;quot;/etc/ssh/sshd_config&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;執行建立docker image&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/Alpine
docker build  -t ali:Alpine .
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;從剛建立的 ali:Alpine 這 image,建立container,並執行它&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;docker run  -d --name=AlpineTest --hostname=Alpine ali:Alpine
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;看 此 Container 目前分配的 IP 是多少&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;docker inspect -f  &#39;{{.NetworkSettings.IPAddress}}&#39; AlpineTest

172.17.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;測試登入看看&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;ssh 172.17.0.2

Welcome to Alpine!

The Alpine Wiki contains a large amount of how-to guides and general
information about administrating Alpine systems.
See &amp;lt;http://wiki.alpinelinux.org&amp;gt;.

You can setup the system with the command: setup-alpine

You may change this message by editing /etc/motd.

Alpine:~#
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;參考資料:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Main_Page&amp;quot;target=&amp;quot;_blank&#34;&gt;官方 Alpine wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management&amp;quot;target=&amp;quot;_blank&#34;&gt;官方 Alpine apk 套件管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.wu-boy.com/2015/12/a-super-small-docker-image-based-on-alpine-linux/&amp;quot;target=&amp;quot;_blank&#34;&gt;Alpine Linux 挑戰最小 docker image OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://firesk.blog.51cto.com/180373/46625&amp;quot;target=&amp;quot;_blank&#34;&gt;解決啟動SSHD服務時報錯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Alpine Linux Docker container with sshd</title>
      <link>http://myghost.aligogo.pw/post/old/alpine-ssh/</link>
      <pubDate>Sun, 15 Jan 2017 08:21:31 +0000</pubDate>
      
      <guid>http://myghost.aligogo.pw/post/old/alpine-ssh/</guid>
      <description>

&lt;h2 id=&#34;簡介&#34;&gt;簡介&lt;/h2&gt;

&lt;p&gt;Alpine Linux 是很輕量級且安全度很高的發行版本。基本系統（包含可執行核心）在5MB以下,非常適合運作在 嵌入式系統及單板電腦上。幾乎可以與BusyBox Linux 這個發行版本相比拼,但與BusyBox 不同的是它支援需多popular套件可以安裝。因此此篇章試著用Alpine image 運作在 Docker上。&lt;/p&gt;

&lt;h2 id=&#34;建立dockerfile&#34;&gt;建立Dockerfile&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;先建立 目錄 名為 Alpine, 此目錄下建 Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;mkdir /tmp/Alpine &amp;amp;&amp;amp; touch /tmp/Dockerfile
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;編寫 Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;FROM alpine:latest
RUN  apk update
RUN  apk add openssh
RUN  /usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key
RUN  /usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key
RUN  /usr/bin/ssh-keygen -t ecdsa -f  /etc/ssh/ssh_host_ecdsa_key                                                                     
RUN  /usr/bin/ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
RUN  echo &#39;root:qwedcxza&#39;|chpasswd
RUN  echo &#39;PermitRootLogin yes&#39; &amp;gt;&amp;gt; /etc/ssh/sshd_config
CMD [&amp;quot;/usr/sbin/sshd&amp;quot;, &amp;quot;-D&amp;quot;, &amp;quot;-f&amp;quot;, &amp;quot;/etc/ssh/sshd_config&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;執行建立docker image&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/Alpine
docker build  -t ali:Alpine .
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;從剛建立的 ali:Alpine 這 image,建立container,並執行它&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;docker run  -d --name=AlpineTest --hostname=Alpine ali:Alpine
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;看 此 Container 目前分配的 IP 是多少&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;docker inspect -f  &#39;{{.NetworkSettings.IPAddress}}&#39; AlpineTest

172.17.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;測試登入看看&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;ssh 172.17.0.2

Welcome to Alpine!

The Alpine Wiki contains a large amount of how-to guides and general
information about administrating Alpine systems.
See &amp;lt;http://wiki.alpinelinux.org&amp;gt;.

You can setup the system with the command: setup-alpine

You may change this message by editing /etc/motd.

Alpine:~#
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;參考資料:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Main_Page&amp;quot;target=&amp;quot;_blank&#34;&gt;官方 Alpine wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management&amp;quot;target=&amp;quot;_blank&#34;&gt;官方 Alpine apk 套件管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.wu-boy.com/2015/12/a-super-small-docker-image-based-on-alpine-linux/&amp;quot;target=&amp;quot;_blank&#34;&gt;Alpine Linux 挑戰最小 docker image OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://firesk.blog.51cto.com/180373/46625&amp;quot;target=&amp;quot;_blank&#34;&gt;解決啟動SSHD服務時報錯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Docker 基本操作 ..未完成</title>
      <link>http://myghost.aligogo.pw/post/docker-0/</link>
      <pubDate>Tue, 15 Nov 2016 18:01:51 +0000</pubDate>
      
      <guid>http://myghost.aligogo.pw/post/docker-0/</guid>
      <description>&lt;p&gt;#映像檔 images&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;查看目前有哪些images

&lt;ul&gt;
&lt;li&gt;docker imagesID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;刪除 image

&lt;ul&gt;
&lt;li&gt;dockr rmi imagesID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;更新映像檔標籤
&lt;code&gt;
docker.io/centos         6.6        523995461077        
&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;docker tag 523995461077  alicode/nginx-sshd:v5
&lt;code&gt;
alicode/nginx-sshd       v5       523995461077          
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#容器  Container&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;簡單建立容器

&lt;ul&gt;
&lt;li&gt;docker create  -it  imageID or Name (建立後,會產生一組CONTAINER ID)&lt;/li&gt;
&lt;li&gt;docker start    CONTAINER ID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;另一種簡單建立 container ,執行bash 並使用互動模式(就像是 進入終端機一樣)

&lt;ul&gt;
&lt;li&gt;docker run -t -i  ubuntu  /bin/bash (若使用 exit ,及ctrl +d 跳出後, 這個container 立即停止)&lt;/li&gt;
&lt;li&gt;docker run -t -i  -d ubuntu  /bin/bash (若使用 exit ,及ctrl +d 跳出後, 這個container 不會停止,因為 -d 表示在背景執行著)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;進入執行中的容器 (兩種方法)

&lt;ul&gt;
&lt;li&gt;docker attach CONTAINER ID  (方法一)&lt;/li&gt;
&lt;li&gt;docker exec -it  CONTAINER ID /usr/bin (方法二)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;刪除停止狀態的容器

&lt;ul&gt;
&lt;li&gt;docker rm CONTAINER ID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;停止容器

&lt;ul&gt;
&lt;li&gt;docker stop CONTAINER ID
#查看images ID 及 container ID 資訊
***&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;docker inspect    images id 或 container id ; 此指令會 回應 一個 JSON  格式的資訊。&lt;/li&gt;
&lt;li&gt;看看以下指令

&lt;ul&gt;
&lt;li&gt;docker start   f44726376&lt;/li&gt;
&lt;li&gt;docker  inspect  f44726376&lt;/li&gt;
&lt;li&gt;docker inspect  -f &amp;lsquo;{{ .NetworkSettings }}&amp;rsquo; f44726376&lt;/li&gt;
&lt;li&gt;docker inspect  -f  &amp;lsquo;{{.NetworkSettings.IPAddress}}&amp;rsquo; f44726376&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Docker 基本操作 ..未完成</title>
      <link>http://myghost.aligogo.pw/post/old/docker-0/</link>
      <pubDate>Tue, 15 Nov 2016 18:01:51 +0000</pubDate>
      
      <guid>http://myghost.aligogo.pw/post/old/docker-0/</guid>
      <description>&lt;p&gt;#映像檔 images&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;查看目前有哪些images

&lt;ul&gt;
&lt;li&gt;docker imagesID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;刪除 image

&lt;ul&gt;
&lt;li&gt;dockr rmi imagesID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;更新映像檔標籤
&lt;code&gt;
docker.io/centos         6.6        523995461077        
&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;docker tag 523995461077  alicode/nginx-sshd:v5
&lt;code&gt;
alicode/nginx-sshd       v5       523995461077          
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#容器  Container&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;簡單建立容器

&lt;ul&gt;
&lt;li&gt;docker create  -it  imageID or Name (建立後,會產生一組CONTAINER ID)&lt;/li&gt;
&lt;li&gt;docker start    CONTAINER ID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;另一種簡單建立 container ,執行bash 並使用互動模式(就像是 進入終端機一樣)

&lt;ul&gt;
&lt;li&gt;docker run -t -i  ubuntu  /bin/bash (若使用 exit ,及ctrl +d 跳出後, 這個container 立即停止)&lt;/li&gt;
&lt;li&gt;docker run -t -i  -d ubuntu  /bin/bash (若使用 exit ,及ctrl +d 跳出後, 這個container 不會停止,因為 -d 表示在背景執行著)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;進入執行中的容器 (兩種方法)

&lt;ul&gt;
&lt;li&gt;docker attach CONTAINER ID  (方法一)&lt;/li&gt;
&lt;li&gt;docker exec -it  CONTAINER ID /usr/bin (方法二)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;刪除停止狀態的容器

&lt;ul&gt;
&lt;li&gt;docker rm CONTAINER ID&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;停止容器

&lt;ul&gt;
&lt;li&gt;docker stop CONTAINER ID
#查看images ID 及 container ID 資訊
***&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;docker inspect    images id 或 container id ; 此指令會 回應 一個 JSON  格式的資訊。&lt;/li&gt;
&lt;li&gt;看看以下指令

&lt;ul&gt;
&lt;li&gt;docker start   f44726376&lt;/li&gt;
&lt;li&gt;docker  inspect  f44726376&lt;/li&gt;
&lt;li&gt;docker inspect  -f &amp;lsquo;{{ .NetworkSettings }}&amp;rsquo; f44726376&lt;/li&gt;
&lt;li&gt;docker inspect  -f  &amp;lsquo;{{.NetworkSettings.IPAddress}}&amp;rsquo; f44726376&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Docker for OpenVPN</title>
      <link>http://myghost.aligogo.pw/post/docker-openvpn/</link>
      <pubDate>Wed, 28 Sep 2016 08:34:29 +0000</pubDate>
      
      <guid>http://myghost.aligogo.pw/post/docker-openvpn/</guid>
      <description>

&lt;h2 id=&#34;test-example-for-openvpn-client&#34;&gt;Test Example for OpenVPN Client&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;先在 Host端放置 openvpn 設定檔 (*ovpn 或是 *.conf)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# ls -l /tmp/vpngate/
st1.conf  st2.conf  st3.conf  vpn.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;假設 此 image id (8ef0cd679f9)已有 openvpn 主程式&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker images
REPOSITORY                         TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
alicode/svpn                       t2                  8ef0cd679f96        2 hours ago         539.2 MB
......
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;簡單建立 container for OpenVPN Client&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# docker run -it --cap-add=NET_ADMIN --device /dev/net/tun  --name svpnT2 -v /tmp/vpngate/:/etc/openvpn -d   8ef0cd679f9   bash -c  &#39;openvpn --config /etc/openvpn/st3.conf&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;呈上一個項目 的看盤重點是&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;cap-add=NET_ADMIN&lt;/strong&gt; ,因為 container 預設使用的網路模式無法自行在 container更改網路相關參數&lt;/li&gt;

&lt;li&gt;&lt;p&gt;run 在 container 的 OpenVPN 的主程式 不要加 &lt;strong&gt;&amp;ndash;daemon&lt;/strong&gt; 參數&lt;/p&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;參考資料:&lt;/h2&gt;

&lt;hr /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dperson/openvpn-client&#34;&gt;dperson/openvpn-client
&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Docker for OpenVPN</title>
      <link>http://myghost.aligogo.pw/post/old/docker-openvpn/</link>
      <pubDate>Wed, 28 Sep 2016 08:34:29 +0000</pubDate>
      
      <guid>http://myghost.aligogo.pw/post/old/docker-openvpn/</guid>
      <description>

&lt;h2 id=&#34;test-example-for-openvpn-client&#34;&gt;Test Example for OpenVPN Client&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;先在 Host端放置 openvpn 設定檔 (*ovpn 或是 *.conf)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# ls -l /tmp/vpngate/
st1.conf  st2.conf  st3.conf  vpn.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;假設 此 image id (8ef0cd679f9)已有 openvpn 主程式&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker images
REPOSITORY                         TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
alicode/svpn                       t2                  8ef0cd679f96        2 hours ago         539.2 MB
......
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;簡單建立 container for OpenVPN Client&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# docker run -it --cap-add=NET_ADMIN --device /dev/net/tun  --name svpnT2 -v /tmp/vpngate/:/etc/openvpn -d   8ef0cd679f9   bash -c  &#39;openvpn --config /etc/openvpn/st3.conf&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;呈上一個項目 的看盤重點是&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;cap-add=NET_ADMIN&lt;/strong&gt; ,因為 container 預設使用的網路模式無法自行在 container更改網路相關參數&lt;/li&gt;

&lt;li&gt;&lt;p&gt;run 在 container 的 OpenVPN 的主程式 不要加 &lt;strong&gt;&amp;ndash;daemon&lt;/strong&gt; 參數&lt;/p&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;參考資料:&lt;/h2&gt;

&lt;hr /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dperson/openvpn-client&#34;&gt;dperson/openvpn-client
&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>